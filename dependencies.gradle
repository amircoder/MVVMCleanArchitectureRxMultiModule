
ext.app = [
        compileSdkVersion: 28,
        buildToolsVersion: "28.0.3",
        targetSdkVersion : 28,
        minSdkVersion    : 21,
        applicationId : "project.x.test",
        applicationVersionName : "1.0-showcase",
        applicationVersionCode : 1
]

def auto_value = "1.7"
ext.autoValue = [
        autoValue : "com.google.auto.value:auto-value:$auto_value"
]

def kotlin_version = "1.3.50"
ext.kotlin = [
        kotlin : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
]
def gradle_plugin_version = "3.5.1"

def daggerVersion = "2.20"
ext.dagger = [
        "dagger" : "com.google.dagger:dagger:$daggerVersion",
        "daggerAndroid" : "com.google.dagger:dagger-android:$daggerVersion",
        "daggerAndroidSupport" : "com.google.dagger:dagger-android-support:$daggerVersion",
        "daggerCompiler" : "com.google.dagger:dagger-compiler:$daggerVersion",
        "daggerAndroidProcessor" : "com.google.dagger:dagger-android-processor:$daggerVersion"

]

def archCompomentVersion = "2.0.0"
ext.arch = [
        "lifecycleExtensions" : "androidx.lifecycle:lifecycle-extensions:$archCompomentVersion",
        "coreTest" : "androidx.arch.core:core-testing:$archCompomentVersion"
]


def powermockVersion = "2.0.0-beta.5"
ext.powerMock = [
        "powermockApiMockito2" : "org.powermock:powermock-api-mockito2:$powermockVersion",
        "powermockJunit4" : "org.powermock:powermock-module-junit4:$powermockVersion",
]

def assertjVersion = "3.14.0"
ext.assertj = [
        "asserjCore" :  "org.assertj:assertj-core:$assertjVersion"
]

def assertjAndroidVersion = "1.1.1"
ext.assertjAndroid = [
        "assertjAndroid" : "com.squareup.assertj:assertj-android:$assertjAndroidVersion"
]

def robolectricVersion = "4.3"
//def robolectricVersion = "3.7.1"
ext.robolectricVersion = [
        "robolectric": "org.robolectric:robolectric:$robolectricVersion"
]

def robolectricShadowsVersion = "3.3.2"
ext.roboelctricShadowVersion = [
        "shadowsPlayServices" : "org.robolectric:shadows-play-services:$robolectricShadowsVersion"
]

def mockKVersion = "1.8.5"
ext.mockk = [
        "mockk" : "io.mockk:mockk:$mockKVersion"
]

def navigational_component = "2.3.0-alpha05"
ext.navigation = [
        "fragment" : "androidx.navigation:navigation-fragment:$navigational_component",
        "ui" : "androidx.navigation:navigation-ui:$navigational_component",
        "fragmentKtx" : "androidx.navigation:navigation-fragment-ktx:$navigational_component",
        "uiKtx" : "androidx.navigation:navigation-ui-ktx:$navigational_component",
        "dynamic_feature" : "androidx.navigation:navigation-dynamic-features-fragment:$navigational_component"
]

def chuck = "1.1.0"
ext.chuck = [
        "chuck" : "com.readystatesoftware.chuck:library:$chuck",
        "chuckNoOp" : "com.readystatesoftware.chuck:library-no-op:$chuck"
]

def appComponent = "1.1.0"
ext.appComponent = [
       "appComponent" : "androidx.appcompat:appcompat:$appComponent"
]

def room = "2.2.1"
ext.room = [
        roomRuntime : "androidx.room:room-runtime:$room",
        compiler : "androidx.room:room-compiler:$room",
        rx2 : "androidx.room:room-rxjava2:$room",
        common : "androidx.room:room-common:$room"
]

def rxAndroid = "2.1.1"
def rxJava = "2.2.17"
def rxTwistedEquations = "2.0.0"
def rxTwistedEquationsSaveState = "2.0.1"
def rxBinding = "2.1.1"
def rxRelay = "2.0.0"
ext.rx = [
        "rxandroid" : "io.reactivex.rxjava2:rxandroid:$rxAndroid",
        "rxjava" : "io.reactivex.rxjava2:rxjava:$rxJava",
        "rx2AndroidSchedulers": "com.twistedequations.rx2:rx2-android-schedulers:$rxTwistedEquations",
        "saveState" : "com.twistedequations.rx2:rx2-savestate:$rxTwistedEquationsSaveState",
        "rxbindingSupport" : "com.jakewharton.rxbinding2:rxbinding-support-v4:$rxBinding",
        "rxbindingAppcompat" : "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:$rxBinding",
        "rxbindingAppcompatKotlin" : "com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:$rxBinding",
        "rxbinding" : "com.jakewharton.rxbinding2:rxbinding:$rxBinding",
        "rxRelay" : "com.jakewharton.rxrelay2:rxrelay:$rxRelay"
]

def retrofitConverterGson = "2.7.2"
def retrofit2Rxjava2Adapter = "1.0.0"
ext.retrofitRx = [
        "retrofitConverterGson" : "com.squareup.retrofit2:converter-gson:$retrofitConverterGson",
        "retrofitRxjavaAdapter" : "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$retrofit2Rxjava2Adapter"
]

def androidX = "1.0.0"
def androidConstraintlayout = "1.1.3"
def multidex = "2.0.1"
def coreKtx = "1.2.0"
def espresso = "3.2.0"
def testRunner = "1.2.0"
def testRules = "1.2.0"
def junit = "1.1.1"
ext.androidx = [
        "recyclerview" : "androidx.recyclerview:recyclerview:$androidX",
        "cardView" : "androidx.cardview:cardview:$androidX",
        "constraintlayout" : "androidx.constraintlayout:constraintlayout:$androidConstraintlayout",
        "legacySupport" : "androidx.legacy:legacy-support-v4:$androidX",
        "appcompat" : "androidx.appcompat:appcompat:$androidX",
        "multidex" : "androidx.multidex:multidex:$multidex",
        "coreKtx" : "androidx.core:core-ktx:$coreKtx",
        "espresso" : "androidx.test.espresso:espresso-core:$espresso",
        "testRunner" : "androidx.test:runner:$testRunner",
        "testRules" : "androidx.test:rules:$testRules",
        "junit" : "androidx.test.ext:junit:$junit"
]


def picasso = "2.71828"
ext.picasso = [
        "picasso" : "com.squareup.picasso:picasso:$picasso"
]

def dexter = "6.0.1"
ext.permissionDexter = [
        "dexter" : "com.karumi:dexter:$dexter"
]

def play = "1.7.1"
ext.play = [
        "play" : "com.google.android.play:core:$play"
]

def annotation = "1.0"
ext.annotation = [
        "jsr250" : "javax.annotation:jsr250-api:$annotation"
]

def material = "1.1.0"
ext.mateiral = [
        "material" : "com.google.android.material:material:$material"
]

def okhttp = "4.4.0"
ext.okhttp_interceptor = [
        "interceptor" : "com.squareup.okhttp3:logging-interceptor:$okhttp",
]

ext.okhttpMockServer = [
        "mockWebServer" : "com.squareup.okhttp3:mockwebserver:$okhttp"
]

def liveDataTest = "1.1.2"
ext.liveDataTest = [
        "live_data_test" : "com.jraska.livedata:testing-ktx:$liveDataTest"
]